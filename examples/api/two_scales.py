"""
===========================
Plots with different scales
===========================

Demonstrate how to do two plots on the same axes with different left and
right scales.

The trick is to use *two different axes* that share the same *x* axis.
You can use separate `matplotlib.ticker` formatters and locators as
desired since the two axes are independent.

Such axes are generated by calling the `Axes.twinx` method.  Likewise,
`Axes.twiny` is available to generate axes that share a *y* axis but
have different top and bottom scales.
"""
import numpy as np
import matplotlib.pyplot as plt

# Create some mock data
t = np.arange(0.01, 10.0, 0.01)
data1 = np.exp(t)
data2 = np.sin(2 * np.pi * t)

# Create twin axes and plot the mock data onto them
fig, ax1 = plt.subplots()
ax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis

for ax, data, c in ((ax1, data1, "red"), (ax2, data2, "blue")):
    ax.plot(t, data, color=c)
    # Color the y-axis (both label and tick labels)
    ax.yaxis.label.set_color(c)
    for tl in ax.get_yticklabels():
        tl.set_color(c)

# Label both axes
ax1.set_xlabel('time (s)')
ax1.set_ylabel('exp')
ax2.set_ylabel('sin')  # NB: we already took care of the x-label with ax1

fig.tight_layout()  # otherwise the right y-label is slightly clipped
plt.show()
